package ${packageName}.service.impl;

import java.util.List;
import javax.annotation.Resource;
import ${packageName}.domain.${ClassName}Domain;
import ${packageName}.interfaces.request.Search${ClassName}PageRequest;
import ${packageName}.interfaces.response.Search${ClassName}PageResponse;
import ${packageName}.model.bo.condition.${ClassName}SearchConditionBO;
import ${packageName}.common.page.Page;
import ${packageName}.common.result.Result;
import ${packageName}.common.page.PageRequest;
import org.springframework.stereotype.Service;
import static com.fei.common.utils.BeanUtils.*;

/**
 * @author ${author}
 * @description ${functionName}Service业务层处理
 */
@Service
public class ${ClassName}ServiceImpl implements ${ClassName}Service {

    @Resource
    private ${ClassName}Domain ${className}Domain;

    /**
     * 查询${functionName}列表
     *
     * @param request 查询参数
     * @return ${functionName}分页
     */
    @Override
    public Result<Page<Search${ClassName}PageResponse>> search${ClassName}Page(Search${ClassName}PageRequest request) {
        ${ClassName}SearchConditionBO searchCondition = transform(${ClassName}SearchConditionBO.class,
                request, true, TransformEnumType.NAME_TO_ENUM);

        int count = ${className}Domain.search${ClassName}Count(searchCondition);
        if (count == 0) {
            return Result.success(Page.emptyPage());
        }

        List<${ClassName}BO> ${className}s = ${className}Domain.search${ClassName}WithCondition(searchCondition,
                PageRequest.of(request.getPageNum(), request.getPageSize()));
        return new Result<>(Page.of(count, batchTransform(Search${ClassName}PageResponse.class,
                    ${className}s, true, TransformEnumType.ENUM_TO_NAME)));
    }
}
